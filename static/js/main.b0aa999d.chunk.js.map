{"version":3,"sources":["components/routes/Home.js","components/Imgcard.js","components/routes/Game.js","components/routes/Results.js","components/routes/match404.js","App.js","serviceWorker.js","index.js"],"names":["Home","state","backgroundimg","Characters","homebackground","className","style","backgroundImage","this","to","React","Component","Imgcard","props","src","image","id","onClick","alt","Game","portraits","data","score","currenttime","intervalID","gameon","timeout","lost","clickedsofar","display_portraits","setState","sort","Math","random","run_game","event","preventDefault","start_timer","portrait_click","thisid","target","find","element","push","intervalid","setInterval","timer","previousState","clearInterval","pathname","timedout","map","portrait","key","Results","resultsbackground","location","match404","fourohfourbackground","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b0aa999d.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../tailwind.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport Characters from '../characters.json';\r\n\r\nclass Home extends React.Component\r\n{\r\n\tstate =\r\n\t{\r\n\t\tbackgroundimg: Characters.homebackground\r\n\t};\r\n\r\n\trender()\r\n\t{\r\n\t\treturn(\r\n\t\t\t<div className = \"bg-cover h-screen\" style = {{backgroundImage: `url(${this.state.backgroundimg})`}}>\r\n\t\t\t\t<Link to = {\"/game\"}>\r\n\t\t\t\t\t<div className = \"flex flex-col justify-around pt-64 px-32\">\r\n\t\t\t\t\t\t<h1 className = \"text-white text-2xl text-semibold self-center blend-exclusion\">\r\n\t\t\t\t\t\t\t<p>Hey there. So persona characters all look pretty similar. It doesn't help that there's a lot of them... \r\n\t\t\t\t\t\t\tLet's test your memory. Click characters as the screen shifts. Try not to click the same character twice.</p> \r\n\t\t\t\t\t\t\t<p>there's got to be a better way to make this text show up without making it slightly ugly</p>\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t<h2 className = \"text-white text-4xl italic text-bold self-center\">Start the game</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport './tailwind.css';\r\n\r\nfunction Imgcard(props)\r\n{\r\n\treturn <img src={props.image} className = \"w-1/12\" id = {props.id} onClick = {props.onClick} alt = \"tempalt\" />;\r\n}\r\n\r\nexport default Imgcard;","import React from 'react';\r\nimport '../tailwind.css';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Characters from '../characters.json';\r\nimport Imgcard from '../Imgcard.js';\r\n\r\nclass Game extends React.Component\r\n{\r\n\tstate =\r\n\t{\r\n\t\tportraits: Characters.data,\r\n\t\tscore: 0,\r\n\t\tcurrenttime: 5,\r\n\t\tintervalID: 0,\r\n\t\tgameon: false,\r\n\t\ttimeout: false,\r\n\t\tlost: false,\r\n\t\tclickedsofar: []\r\n\t};\r\n\r\n\tdisplay_portraits = () =>\r\n\t{\r\n\t\tthis.setState(() => this.state.portraits.sort(() => Math.random() - .5));\r\n\t};\r\n\r\n\trun_game = event =>\r\n\t{\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({gameon: true});\r\n\t\tthis.start_timer();\r\n\t\tthis.display_portraits();\r\n\t};\r\n\r\n\tportrait_click = event =>\r\n\t{\r\n\t\tevent.preventDefault();\r\n\t\tif(this.state.gameon)\r\n\t\t{\r\n\t\t\tvar thisid = event.target.id;\r\n\r\n\t\t\tthis.state.clickedsofar.find(element => {\r\n\t\t\t\tif(thisid === element)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn this.setState({lost: true});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.setState (()=> this.state.clickedsofar.push(thisid));\r\n\t\t\tthis.setState({score: this.state.score + 1, currenttime: 5});\r\n\t\t\tthis.display_portraits();\r\n\t\t}\r\n\t}\r\n\r\n\tstart_timer = () =>\r\n\t{\r\n\t\tlet intervalid = setInterval(this.timer, 1000);\r\n\t\tthis.setState({intervalID: intervalid});\r\n\t}\r\n\r\n\ttimer = () =>\r\n\t{\r\n\t\tif(this.state.currenttime > 1)\r\n\t\t{\r\n\t\t\tthis.setState(previousState => ({currenttime: previousState.currenttime - 1}));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tclearInterval(this.state.intervalID);\r\n\t\t\tthis.setState({timeout: true});\r\n\t\t}\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tif(this.state.lost || this.state.timeout)\r\n\t\t{\r\n\t\t\treturn <Redirect to = {{ pathname: \"/results\", state: { score: this.state.score, timedout: this.state.timeout }}}></Redirect>\r\n\t\t}\r\n\t\telse return(\r\n\t\t\t<div>\r\n\t\t\t\t<div className = \"flex flex-row justify-around bg-red-700 p-8 mt-2 mb-20\">\r\n\t\t\t\t\t<h1 className = \"text-3xl font-bold italic\">Time: {this.state.currenttime} (resets on click)</h1>\r\n\t\t\t\t\t<h1 className = \"text-3xl font-bold italic\">Score: {this.state.score}</h1>\r\n\t\t\t\t\t<button className = \"text-3xl font-bold italic\" onClick = {this.run_game}>Start</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className = \"flex flex-row flex-wrap w-5/6 mx-auto my-10\" id = \"game\">\r\n\t\t\t\t\t{this.state.portraits.map(portrait => (\r\n\t\t\t\t\t\t<Imgcard image={portrait.image} key = {portrait.id} id = {portrait.id} onClick = {this.portrait_click} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport '../tailwind.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport Characters from '../characters.json';\r\n\r\nclass Results extends React.Component\r\n{\r\n\tcomponentDidMount(){\r\n\t\tthis.setState({ score: this.props.location.state.score, timedout: this.props.location.state.timedout });\r\n\t}\r\n\r\n\tstate =\r\n\t{\r\n\t\tbackgroundimg: Characters.resultsbackground\r\n\t};\r\n\r\n\trender()\r\n\t{\r\n\t\tif(this.state.timedout)\r\n\t\t{\r\n\t\t\treturn(\r\n\t\t\t\t<div className = \"bg-contain bg-repeat-round h-screen\" style = {{backgroundImage: `url(${this.state.backgroundimg})`}}>\r\n\t\t\t\t\t<div className = \"flex flex-col justify-around pt-32 px-32\">\r\n\t\t\t\t\t\t<div className = \"text-2xl text-semibold self-center w-1/3 text-center\">\r\n\t\t\t\t\t\t\t<div className = \"bg-red-700 text-center p-10 rounded-t-full\">\r\n\t\t\t\t\t\t\t\t<h1 className = \"text2xl text-white text-bold w-full\">FINISH</h1>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className = \"bg-white rounded-b-lg p-10\">\r\n\t\t\t\t\t\t\t\t<p>You finished with a streak of {this.state.score} unique faces!</p>\r\n\t\t\t\t\t\t\t\t<p className = \"pb-5\">Try to be faster next time, ey champ?</p>\r\n\t\t\t\t\t\t\t\t<Link to = \"/Game\" className = \"bg-red-600 p-3 mr-2 rounded-lg\">Play again?</Link>\r\n\t\t\t\t\t\t\t\tor\r\n\t\t\t\t\t\t\t\t<Link to = \"/\" className = \"bg-red-600 p-3 ml-2 rounded-lg\">Go Home?</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t); \r\n\t\t}\r\n\t\telse return(\r\n\t\t\t<div className = \"bg-contain bg-repeat-round h-screen\" style = {{backgroundImage: `url(${this.state.backgroundimg})`}}>\r\n\t\t\t\t\t<div className = \"flex flex-col justify-around pt-32 px-32\">\r\n\t\t\t\t\t\t<div className = \"text-2xl text-semibold self-center w-1/3 text-center\">\r\n\t\t\t\t\t\t\t<div className = \"bg-red-700 text-center p-10 rounded-t-full\">\r\n\t\t\t\t\t\t\t\t<h1 className = \"text2xl text-white text-bold w-full\">FINISH</h1>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className = \"bg-white rounded-b-lg p-10\">\r\n\t\t\t\t\t\t\t\t<p>You finished with a streak of {this.state.score} unique faces!</p>\r\n\t\t\t\t\t\t\t\t<p className = \"pb-5\">But that last click was a duplicate!</p>\r\n\t\t\t\t\t\t\t\t<Link to = \"/game\" className = \"bg-red-600 p-3 mr-2 rounded-lg\">Play again?</Link>\r\n\t\t\t\t\t\t\t\tor\r\n\t\t\t\t\t\t\t\t<Link to = \"/memory_clicker\" className = \"bg-red-600 p-3 ml-2 rounded-lg\">Go Home?</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default Results;","import React from 'react';\r\nimport '../tailwind.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport Characters from '../characters.json';\r\n\r\nclass match404 extends React.Component\r\n{\r\n\tstate =\r\n\t{\r\n\t\tbackgroundimg: Characters.fourohfourbackground\r\n\t};\r\n\r\n\trender()\r\n\t{\r\n\t\treturn(\r\n\t\t\t<div className = \"bg-auto bg-no-repeat bg-center bg-redfourohfour h-screen\" style = {{backgroundImage: `url(${this.state.backgroundimg})`}}>\r\n\t\t\t\t<div className = \"flex flex-row justify-center pt-64\">\r\n\t\t\t\t\t<div className = \"flex flex-col content-center text-white text-extrabold text-2xl\">\r\n\t\t\t\t\t\t<h1 className = \"mb-40\">It looks like you're trying to escape the webpage! </h1>\r\n\t\t\t\t\t\t<Link to = \"/memory_clicker\" className = \"self-center\">-&gt; Click here to go back home.&lt;-</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default match404;","import React from 'react';\r\nimport Home from './components/routes/Home';\r\nimport Game from './components/routes/Game';\r\nimport Results from './components/routes/Results';\r\nimport match404 from './components/routes/match404';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path = \"/memory_clicker\" component = {Home} />\r\n        <Route exact path = \"/game\" component = {Game} />\r\n        <Route exact path = \"/results\" component = {Results} />\r\n        <Route component = {match404} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}